.hoverableText {
  cursor: pointer;
  position: relative;
  transition: all 0.3s ease;
  border-bottom: 1px dotted rgba(0, 123, 255, 0.3);
}

.hoverableText:hover {
  background-color: rgba(0, 123, 255, 0.1);
  border-radius: 3px;
  border-bottom: 1px dotted rgba(0, 123, 255, 0.7);
}

/* Removing redundant wrapper styles - they duplicate hoverableText functionality */

/* Enhanced loading indicator */
.loading {
  position: relative;
  background-size: 400% 400%;
  animation: loading-pulse 2s ease infinite;
  cursor: progress;
}

.loading::after {
  content: '';
  position: absolute;
  right: -8px;
  top: 50%;
  transform: translateY(-50%);
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background-color: #007bff;
  animation: pulse 1s infinite;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

@keyframes pulse {
  0% {
    opacity: 0.3;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.3;
  }
}

@keyframes loading-pulse {
  0% {
    background-color: transparent;
  }
  50% {
    background-color: rgba(13, 110, 253, 0.05);
  }
  100% {
    background-color: transparent;
  }
}

/* Style for when similar content is found */
.hasResults {
  border-bottom: 1px dashed #007bff;
  animation: subtleWink 2s ease-in-out infinite, breathingHighlight 3s infinite ease-in-out;
  border-bottom: 1px dotted rgba(13, 110, 253, 0.5);
}

@keyframes subtleWink {
  0% { background-color: rgba(0, 123, 255, 0.05); }
  50% { background-color: rgba(0, 123, 255, 0.15); }
  100% { background-color: rgba(0, 123, 255, 0.05); }
}

@keyframes breathingHighlight {
  0% {
    background-color: transparent;
    box-shadow: none;
  }
  50% {
    background-color: rgba(0, 123, 255, 0.1);
    box-shadow: 0 0 4px rgba(0, 123, 255, 0.2);
  }
  100% {
    background-color: transparent;
    box-shadow: none;
  }
}

/* Dark mode version of breathing highlight animation */
@keyframes breathingHighlightDark {
  0% {
    background-color: transparent;
    box-shadow: none;
  }
  50% {
    background-color: rgba(64, 156, 255, 0.15);
    box-shadow: 0 0 4px rgba(64, 156, 255, 0.3);
  }
  100% {
    background-color: transparent;
    box-shadow: none;
  }
}

/* Apply subtle highlight to chunks */
.highlightedChunk {
  background-color: rgba(0, 123, 255, 0.08);
  border-left: 2px solid rgba(0, 123, 255, 0.4);
  padding-left: 5px;
  border-radius: 3px;
  transition: all 0.3s ease;
}

.highlightedChunk:hover {
  background-color: rgba(0, 123, 255, 0.15);
}

/* Dark mode support */
:global(.dark-mode) .hoverableText:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

:global(.dark-mode) .loading::after {
  background-color: #45a9ff;
}

:global(.dark-mode) .highlightedChunk {
  background-color: rgba(100, 149, 237, 0.08);
  border-left: 2px solid rgba(100, 149, 237, 0.4);
}

html[data-bs-theme="dark"] .isHovered {
  background-color: rgba(64, 156, 255, 0.25) !important;
  box-shadow: 0 0 4px rgba(64, 156, 255, 0.6) !important;
}

/* Apply dark mode animation to elements with hasResults class in dark mode */
html[data-bs-theme="dark"] .hasResults {
  animation: subtleWink 2s ease-in-out infinite, breathingHighlightDark 3s infinite ease-in-out;
}

/* Styling for hoverable text with similarity results */
.hoverableText, .hoverableTextWrapper {
  position: relative;
  cursor: pointer;
  transition: background-color 0.3s ease;
  border-radius: 2px;
}

.hoverableText:hover, .hoverableTextWrapper:hover {
  background-color: rgba(13, 110, 253, 0.1);
}

/* Specific styles for similarity mode */
.similarity-mode p {
  transition: all 0.3s ease;
  margin-bottom: 1rem;
  border-radius: 4px;
}

.similarity-mode p:hover {
  background-color: rgba(13, 110, 253, 0.1);
}

/* Override breathing animation with a fixed, stronger highlight */
.isHovered {
  animation: none !important;
  background-color: rgba(0, 123, 255, 0.2) !important; /* Stronger blue highlight */
  box-shadow: 0 0 4px rgba(0, 123, 255, 0.5) !important;
  border-radius: 2px;
}